//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreContext {

    public CoreEntity featuresModelEntity { get { return GetGroup(CoreMatcher.FeaturesModel).GetSingleEntity(); } }
    public FeaturesModel featuresModel { get { return featuresModelEntity.featuresModel; } }
    public bool hasFeaturesModel { get { return featuresModelEntity != null; } }

    public CoreEntity SetFeaturesModel(System.Collections.Generic.Dictionary<string, IGameFeature> newMap, System.Collections.Generic.Dictionary<string, UnityEngine.Events.UnityAction> newEntryFeatures) {
        if (hasFeaturesModel) {
            throw new Entitas.EntitasException("Could not set FeaturesModel!\n" + this + " already has an entity with FeaturesModel!",
                "You should check if the context already has a featuresModelEntity before setting it or use context.ReplaceFeaturesModel().");
        }
        var entity = CreateEntity();
        entity.AddFeaturesModel(newMap, newEntryFeatures);
        return entity;
    }

    public void ReplaceFeaturesModel(System.Collections.Generic.Dictionary<string, IGameFeature> newMap, System.Collections.Generic.Dictionary<string, UnityEngine.Events.UnityAction> newEntryFeatures) {
        var entity = featuresModelEntity;
        if (entity == null) {
            entity = SetFeaturesModel(newMap, newEntryFeatures);
        } else {
            entity.ReplaceFeaturesModel(newMap, newEntryFeatures);
        }
    }

    public void RemoveFeaturesModel() {
        featuresModelEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public FeaturesModel featuresModel { get { return (FeaturesModel)GetComponent(CoreComponentsLookup.FeaturesModel); } }
    public bool hasFeaturesModel { get { return HasComponent(CoreComponentsLookup.FeaturesModel); } }

    public void AddFeaturesModel(System.Collections.Generic.Dictionary<string, IGameFeature> newMap, System.Collections.Generic.Dictionary<string, UnityEngine.Events.UnityAction> newEntryFeatures) {
        var index = CoreComponentsLookup.FeaturesModel;
        var component = CreateComponent<FeaturesModel>(index);
        component.map = newMap;
        component.entryFeatures = newEntryFeatures;
        AddComponent(index, component);
    }

    public void ReplaceFeaturesModel(System.Collections.Generic.Dictionary<string, IGameFeature> newMap, System.Collections.Generic.Dictionary<string, UnityEngine.Events.UnityAction> newEntryFeatures) {
        var index = CoreComponentsLookup.FeaturesModel;
        var component = CreateComponent<FeaturesModel>(index);
        component.map = newMap;
        component.entryFeatures = newEntryFeatures;
        ReplaceComponent(index, component);
    }

    public void RemoveFeaturesModel() {
        RemoveComponent(CoreComponentsLookup.FeaturesModel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherFeaturesModel;

    public static Entitas.IMatcher<CoreEntity> FeaturesModel {
        get {
            if (_matcherFeaturesModel == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.FeaturesModel);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherFeaturesModel = matcher;
            }

            return _matcherFeaturesModel;
        }
    }
}
